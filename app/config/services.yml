# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:

    # List of Doctrine EventListeners

    core.doctrine_image_listener:
        class: EventListenerBundle\EventListener\ProfileImageListener
        arguments: ["@core.uploader", "%profile_image_directory%"]
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postLoad }

    # List of Symfony EventListeners

    core.notification_listener:
        class: EventListenerBundle\Listener\NotificationListener
        arguments: ["@core.events"]
        tags:
            - { name: kernel.event_listener, event: zboard.user_notifications, method: createUserEvent }
            - { name: kernel.event_listener, event: zboard.student_notification, method: createStudentEvent }
            - { name: kernel.event_listener, event: zboard.global_notification, method: createGlobalEvent }

    # List of services used in the principal environnement.

    core.admin:
        class: AdminBundle\Services\Admin
        arguments: ["@doctrine.orm.entity_manager", "@form.factory", "@session", "@core.events"]

    core.back:
        class: BackendBundle\Services\Back
        arguments: ["@doctrine.orm.entity_manager", "@form.factory", "@session", "@security.token_storage","@security.authorization_checker", "@core.events"]

    core.user:
        class: UserBundle\Services\UserService
        arguments: ["@doctrine.orm.entity_manager", "@form.factory", "@session", "@security.token_storage", "@core.mail", "@security.authorization_checker", "@core.events"]

    core.security:
        class: SecuriteBundle\Services\SecurityService
        arguments: ["@doctrine.orm.entity_manager", "@form.factory", "@session", "@security.authorization_checker", "@core.events"]

    core.activity:
        class: AdminBundle\Services\ActivityManager
        arguments: ["@doctrine.orm.entity_manager"]

    # list of services used in addition to perform global actions.

    core.archive:
        class: AdminBundle\Services\Archive
        arguments: ["@doctrine.orm.entity_manager", "@session", "@core.events"]

    core.statistiques:
        class: AdminBundle\Services\Statistiques
        arguments: ["@doctrine.orm.entity_manager"]
        lazy: true

    core.mentorat:
        class: MentoratBundle\Services\MentoratService
        arguments: ["@doctrine.orm.entity_manager", "@form.factory", "@session", "@security.token_storage", "@security.authorization_checker", "@core.events"]

    core.formation:
      class: MentoratBundle\Services\FormationService
      arguments: ["@doctrine.orm.entity_manager", "@form.factory", "@security.token_storage"]

    core.recrutement:
      class: MentoratBundle\Services\RecrutementService
      arguments: ["@doctrine.orm.entity_manager", "@form.factory", "@security.token_storage", "@security.authorization_checker", "@core.mail"]

    # List of services used in order to perform a specific action.

    core.uploader:
        class: AdminBundle\Services\Uploader
        arguments: ["%profile_image_directory%"]
        lazy: true

    core.events:
        class: NotificationBundle\Services\Evenements
        arguments: ["@doctrine.orm.entity_manager", "@security.token_storage", "@session", "@core.mail"]
        lazy: true

    core.mail:
        class: AdminBundle\Services\Mail
        arguments: ["@templating", "@mailer"]
        lazy: true

    # List of services used in order to perform hard tasks.

    core.facturation:
        class: FacturationBundle\FacturationService
        arguments: ["@doctrine.orm.entity_manager"]

    # List of services used to registrer the users with FOS.
    # Don't delete this services !

    core.user_register:
        class: UserBundle\Form\Type\User\RegistrationType
        tags:
        - { name: form.type, alias: app_user_registration }

    core.mentore_register:
        class: UserBundle\Form\Type\Mentore\RegistrationMentoreType
        tags:
        - { name: form.type, alias: app_mentore_registration }
