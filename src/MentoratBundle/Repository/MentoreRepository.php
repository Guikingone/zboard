<?php

namespace MentoratBundle\Repository;

/**
 * MentoreRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MentoreRepository extends \Doctrine\ORM\EntityRepository
{
    public function getMentoresPPlus()
    {
        return $this->createQueryBuilder('mp')
                    ->innerJoin('mp.suivi', 's')
                        ->addSelect('s')
                    ->leftJoin('s.parcours', 'p')
                        ->addSelect('p')
                    ->leftJoin('p.abonnement', 'a')
                        ->addSelect('a')
                    ->where('a.libelle = :abonnement')
                        ->setParameter('abonnement', $abonnement = 'Premium Plus')
                    ->getQuery()
                    ->getResult();
    }

    public function getMentorePClass()
    {
        return $this->createQueryBuilder('mp')
            ->innerJoin('mp.suivi', 's')
            ->addSelect('s')
            ->leftJoin('s.parcours', 'p')
            ->addSelect('p')
            ->leftJoin('p.abonnement', 'a')
            ->addSelect('a')
            ->where('a.libelle = :abonnement')
            ->setParameter('abonnement', $abonnement = 'Premium Class')
            ->getQuery()
            ->getResult();
    }

    public function getNewMentores($days)
    {
        return $this->createQueryBuilder('m')
                    ->where('m.date_start <= :days')
                        ->setParameter('days', $days)
                    ->getQuery()
                    ->getResult();
    }

    public function getMentoresWaiting()
    {
        return $this->createQueryBuilder('s')
                    ->where('s.status = :status')
                        ->setParameter('status', $status = 'En attente')
                    ->getQuery()
                    ->getResult();
    }

    public function getStudentsByMentor($id)
    {
        return $this->createQueryBuilder('s')
                    ->innerJoin('s.suivi', 'ss')
                        ->addSelect('ss')
                    ->where('ss.mentor = :id')
                        ->setParameter('id', $id)
                    ->getQuery()
                    ->getResult();
    }
}
